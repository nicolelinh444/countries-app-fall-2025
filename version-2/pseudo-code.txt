-------------------------------------
ðŸ§  VERSION 2 PSEUDO-CODE WORKSHEET
-------------------------------------
This is our WHAT, WHEN, WHERE, HOW framework for working with data:
1. WHAT data should we store & retrieve?
   List the key/value pair, data type, example value.
2. WHEN should we store & retrieve the data?
   What event or user action is the trigger, such as clicking a button, submitting a form, or loading a page?
3. WHERE does this happen in the code?
   What component, page or function?
4. HOW do we accomplish this?
   What steps do we need to take?
   Do we need to...
    - render anything in JSX?
    - make any functions? If so, when would we call those functions?
    - use any useState or useEffect hooks?
    - set or get an item from localStorage?
  Remember: This is pseudo-code. Don't write code yet â€” just outline the actions in plain language.
âœ¨ YOUR TASK: Fill in the answers to each WHAT/WHEN/WHERE/HOW question below for the 3 pieces of data.
------------------------
ðŸ“Š FORM DATA
------------------------
WHAT data should we store & retrieve?
KEY: "userData"
VALUE: the data from the form that the user submits (full name, email, country, bio)
VALUE DATA TYPE: data object
EXAMPLE VALUE: userData {
    fullName: "Nicole",
    email: "nicole@gmail.com",
    country: "USA",
    bio: "my bio"
};
------------------------
ðŸ”¶ STORING FORM DATA
------------------------
WHEN: User clicks submit button
WHERE: Saved Countries page
HOW:
Step 1: Create a handleSubmit function that gets the values from the form and saves it in localStorage
Step 2: Add the handleSubmit as an onSubmit prop on the form in JSX - make sure that the function is being called when the user clicks submit
Add more steps as needed!
------------------------
ðŸ”¶ RETRIEVING FORM DATA
------------------------
WHEN: Saved Countries page load, when the user loads the Saved Countries page
WHERE: Saved Countries page above the form
HOW:
Step 1: Make a useEffect that retrieves the Form data on page load and saves it in state
Step 2: Render the state variable in the JSX as a heading that welcomes the user 
------------------------
ðŸ“Š SAVED COUNTRIES DATA
------------------------
WHAT data should we store & retrieve?
KEY: "savedCountries"
VALUE: saved countries names
VALUE DATA TYPE: array of strings
EXAMPLE VALUE: savedCountries [
   "Germany",
   "China",
   "USA"
]
------------------------
ðŸ”¶ STORING SAVED COUNTRIES DATA
------------------------
WHEN: user clicks save button on a country
WHERE: save button on country detail page, renders on saved countries page
HOW: make the save button add name of user's preferred country in local storage, check if country has been saved before, retrieve preferred country data from local storage 
Step 1: We need to attach an onClick handler to the Save button on the CountryDetail page
Step 2: When the user clicks on the Save button, call the handleClick function
Step 3: The handleClick function needs to save the country's name in localStorage
Step 4: The handleClick function will first get the array of saved countries from local Storage. If the country is already saved, then there is no need to save the country. If the country is not saved yet, then add the country's name to the array of savedCountries and store that value in localStorage.
Add more steps as needed!
------------------------
ðŸ”¶ RETRIEVING SAVED COUNTRIES DATA
------------------------
WHEN: _______
WHERE: _______
HOW:
Step 1: _______
Step 2: _______
Step 3: _______
Add more steps as needed!
------------------------
ðŸ“Š COUNTRY COUNTS DATA
------------------------
WHAT data should we store & retrieve?
KEY: "_______"
VALUE: _______
VALUE DATA TYPE: _______
EXAMPLE VALUE: _______
------------------------
ðŸ”¶ STORING & RETRIEVING COUNTRY COUNTS DATA
------------------------
NOTE: We combine storing & retrieving country counts data into one section because they always happen together. Each time we look up a countryâ€™s view count, we also need to increase it and save the new total.
WHEN: _______
WHERE: _______
HOW:
Step 1: _______
Step 2: _______
Step 3: _______
Add more steps as needed!





